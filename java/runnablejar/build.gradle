/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.5.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    // Causes executable jars to be created.
    // Use
    // ./gradlew build
    // as usual.
    // This plugin modifies the build task to add a dependency on the
    // the bootJar task which creates the executable jar.
    // The executable jar will be found in the same location
    // as the original jar: build/libs/executablejar.jar
    // It can be run directly with the follow command:
    // java -jar executablejar.jar
    id 'org.springframework.boot' version '2.3.1.RELEASE'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
}

application {
    // Define the main class for the application.
    mainClassName = 'sv.demo.runnablejar.App'
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}
